<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.in_str_Document="D:\Invoices\MELBOURNE SERVICE INVOICE.pdf" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:p1="http://schemas.uipath.com/workflow/activities/intelligentocr/classification" xmlns:p2="http://schemas.uipath.com/workflow/activities/document-processing-contracts/classification" xmlns:p3="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p4="http://schemas.uipath.com/workflow/activities/intelligentocr/extraction" xmlns:p5="http://schemas.uipath.com/workflow/activities/documentunderstanding-ml" xmlns:p6="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:p7="http://schemas.uipath.com/workflow/activities/document-processing-contracts/extraction" xmlns:p8="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing.Common" xmlns:sd2="clr-namespace:System.Drawing;assembly=System.Drawing.Primitives" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uoa="clr-namespace:UiPath.OmniPage.Activities;assembly=UiPath.OmniPage.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_dict_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="out_dt_DataFromDocuments" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="in_str_Document" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1036,5811</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.TaxonomyManagement</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Digitization</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Vision.OmniPage.Core</x:String>
      <x:String>UiPath.OmniPage.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DocumentClassification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Classification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Training</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Training</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DataExtraction</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>UiPath.DocumentUnderstanding.ML.Activities</x:String>
      <x:String>UiPath.DocumentUnderstanding.ML.Activities.Editors</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.ValidationStation</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.SmartData.PositionBasedExtraction.Storage</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.MetadataLoadContext</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.OmniPage.Core</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>UiPath.SmartData.PositionBasedExtraction</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="1046,5746" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="p8:DocumentTaxonomy" Name="doctax_DocumentTaxonomy" />
      <Variable x:TypeArguments="x:String" Name="str_DocText" />
      <Variable x:TypeArguments="p3:Document" Name="doc_DOM" />
      <Variable x:TypeArguments="p6:ClassificationResult[]" Name="cr_ClassificationResults" />
      <Variable x:TypeArguments="p6:ExtractionResult" Name="er_ExtractionResults" />
      <Variable x:TypeArguments="p6:ExtractionResult" Name="er_ValidationResult" />
      <Variable x:TypeArguments="sd:DataSet" Name="dataset_Result" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Output" />
      <Variable x:TypeArguments="x:String" Default="C:\Users\Hello\Downloads\Northwest Construction\Northwest Construction\Sample invoices" Name="str_DocPath" />
      <Variable x:TypeArguments="x:String" Name="str_Items" />
      <Variable x:TypeArguments="sd:DataTable" Default="[New DataTable()]" Name="dt_TableFromDataset" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="int_TableRowCounter" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="int_TableColumnCounter" />
      <Variable x:TypeArguments="p6:ExtractionResult" Name="er_validatedExtractionResults" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="984,141" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;[&quot;+Now.ToString(&quot;yyyy/MM/dd HH:mm:ss&quot;)+&quot;] : &quot;+&quot;Started Document Reader process for all downloaded PDF attachments...&quot;]" />
    <ui:BuildDataTable sap2010:Annotation.AnnotationText="Build default data table for the extracted info." DataTable="[dt_Output]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="984,91" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:BuildDataTable>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="984,141" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="[UiPath.Core.Activities.LogLevel.Trace]" Message="[&quot;[&quot;+Now.ToString(&quot;yyyy/MM/dd HH:mm:ss&quot;)+&quot;] : &quot;+&quot;Processing &quot; + in_str_Document.ToString + &quot; through Document Reader...&quot;]" />
    <p:LoadTaxonomy sap2010:Annotation.AnnotationText="Output the created Taxonomy" DisplayName="Load Taxonomy" sap:VirtualizedContainerService.HintSize="984,104" sap2010:WorkflowViewState.IdRef="LoadTaxonomy_2" Taxonomy="[doctax_DocumentTaxonomy]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </p:LoadTaxonomy>
    <p:DigitizeDocument ApplyOcrMigrated="True" ApplyOcrOnPdf="Auto" DegreeOfParallelism="-1" DetectCheckboxes="True" DisplayName="Digitize Document" DocumentObjectModel="[doc_DOM]" DocumentPath="[in_str_Document]" DocumentText="[str_DocText]" ForceApplyOCR="False" sap:VirtualizedContainerService.HintSize="984,297" sap2010:WorkflowViewState.IdRef="DigitizeDocument_2">
      <p:DigitizeDocument.OCREngine>
        <ActivityFunc x:TypeArguments="sd1:Image, x:String, scg:IEnumerable(scg:KeyValuePair(sd2:Rectangle, x:String))">
          <ActivityFunc.Argument1>
            <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
          </ActivityFunc.Argument1>
          <ActivityFunc.Argument2>
            <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
          </ActivityFunc.Argument2>
          <uoa:OmniPageOCR Language="{x:Null}" Output="{x:Null}" Scale="{x:Null}" Text="{x:Null}" BundleType="Extended" ComputeSkewAngle="False" DisplayName="OmniPage OCR" ExtractHandprintedText="False" ExtractWords="True" sap:VirtualizedContainerService.HintSize="312,25" sap2010:WorkflowViewState.IdRef="OmniPageOCR_4" Image="[Image]" NoopExecution="False" PredictionId="[PredictionId]" Profile="Scan" />
        </ActivityFunc>
      </p:DigitizeDocument.OCREngine>
    </p:DigitizeDocument>
    <p1:ClassifyDocumentScope ClassificationResults="[cr_ClassificationResults]" DisplayName="Classify Document Scope" DocumentObjectModel="[doc_DOM]" DocumentPath="[in_str_Document]" DocumentText="[str_DocText]" sap:VirtualizedContainerService.HintSize="984,436" sap2010:WorkflowViewState.IdRef="ClassifyDocumentScope_7" Taxonomy="[doctax_DocumentTaxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI48cfe18be9204f54af3e938c6cc0784d&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;NewGeneration.AccountPayable.invoice&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;NewGeneration.AccountPayable.invoice&quot;,&quot;ClassifierDocumentTypeId&quot;:&quot;&quot;,&quot;IsDocumentTypeIdMapped&quot;:true}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UI48cfe18be9204f54af3e938c6cc0784d&quot;:&quot;70&quot;},&quot;DocumentTypesByPersistenceId&quot;:{&quot;UI48cfe18be9204f54af3e938c6cc0784d&quot;:[]}}">
      <p1:ClassifyDocumentScope.Classifiers>
        <p1:KeywordBasedClassifier HumanValidatedData="{x:Null}" LearningData="{x:Null}" DisplayName="Keyword Based Classifier" sap:VirtualizedContainerService.HintSize="234,114" sap2010:WorkflowViewState.IdRef="KeywordBasedClassifier_10" LearningFilePath="Data\EmptyJSON.json" PersistenceId="UI48cfe18be9204f54af3e938c6cc0784d">
          <p1:KeywordBasedClassifier.ClassifierResult>
            <OutArgument x:TypeArguments="p2:ClassifierResult">
              <DelegateArgumentReference x:TypeArguments="p2:ClassifierResult">
                <DelegateOutArgument x:TypeArguments="p2:ClassifierResult" Name="ClassifierResult" />
              </DelegateArgumentReference>
            </OutArgument>
          </p1:KeywordBasedClassifier.ClassifierResult>
          <p1:KeywordBasedClassifier.DocumentObjectModel>
            <InArgument x:TypeArguments="p3:Document">
              <DelegateArgumentValue x:TypeArguments="p3:Document">
                <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
              </DelegateArgumentValue>
            </InArgument>
          </p1:KeywordBasedClassifier.DocumentObjectModel>
          <p1:KeywordBasedClassifier.DocumentPath>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
              </DelegateArgumentValue>
            </InArgument>
          </p1:KeywordBasedClassifier.DocumentPath>
          <p1:KeywordBasedClassifier.DocumentText>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
              </DelegateArgumentValue>
            </InArgument>
          </p1:KeywordBasedClassifier.DocumentText>
          <p1:KeywordBasedClassifier.DocumentTypes>
            <InArgument x:TypeArguments="p2:ClassifierDocumentType[]">
              <DelegateArgumentValue x:TypeArguments="p2:ClassifierDocumentType[]">
                <DelegateInArgument x:TypeArguments="p2:ClassifierDocumentType[]" Name="DocumentTypes" />
              </DelegateArgumentValue>
            </InArgument>
          </p1:KeywordBasedClassifier.DocumentTypes>
          <p1:KeywordBasedClassifier.PredictionId>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
              </DelegateArgumentValue>
            </InArgument>
          </p1:KeywordBasedClassifier.PredictionId>
        </p1:KeywordBasedClassifier>
      </p1:ClassifyDocumentScope.Classifiers>
    </p1:ClassifyDocumentScope>
    <p4:DataExtractionScope DocumentTypeId="{x:Null}" ApplyGenerativeValidation="False" ClassificationResult="[cr_ClassificationResults(0)]" DisplayName="Data Extraction Scope" DocumentObjectModel="[doc_DOM]" DocumentPath="[in_str_Document]" DocumentText="[str_DocText]" ExtractionResult="[er_ExtractionResults]" FormatValuesIfPossible="True" GenerativeValidationConfidenceThreshold="99" sap:VirtualizedContainerService.HintSize="984,515" sap2010:WorkflowViewState.IdRef="DataExtractionScope_5" Taxonomy="[doctax_DocumentTaxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UIe9928320345d4e63806d55660770e21f&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;NewGeneration.AccountPayable.invoice&quot;:{&quot;FieldMappings&quot;:{&quot;NewGeneration.AccountPayable.invoice.Vendor&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.Vendor&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.VendorAdress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.VendorAdress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.InvoiceNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.InvoiceNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.ReceivedDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.ReceivedDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.PONumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.PONumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.DUEDATE&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.DUEDATE&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.CURRENCY&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.CURRENCY&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.TOTAL&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.TOTAL&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.BankDetails&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.BankDetails&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.Carrier&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.Carrier&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.Items.Description&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.Items.Description&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.Items.UnitPrice&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.Items.UnitPrice&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.Items.LineTotal&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.Items.LineTotal&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false}},&quot;ExtractorDocumentTypeId&quot;:&quot;\&quot;\&quot;&quot;}}},&quot;UIec703a184a4843f5989d46dca2205e45&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;NewGeneration.AccountPayable.invoice&quot;:{&quot;FieldMappings&quot;:{&quot;NewGeneration.AccountPayable.invoice.Vendor&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.Vendor&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.VendorAdress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.VendorAdress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.InvoiceNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.InvoiceNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.ReceivedDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.ReceivedDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.PONumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.PONumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.DUEDATE&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.DUEDATE&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.CURRENCY&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.CURRENCY&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.TOTAL&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.TOTAL&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.BankDetails&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.BankDetails&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.Carrier&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.Carrier&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.Items.Description&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.Items.Description&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.Items.UnitPrice&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.Items.UnitPrice&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.Items.LineTotal&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.Items.LineTotal&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false}},&quot;ExtractorDocumentTypeId&quot;:null}}},&quot;UIce37a4ef2cb744d69843c9690a3ff361&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;NewGeneration.AccountPayable.invoice&quot;:{&quot;FieldMappings&quot;:{&quot;NewGeneration.AccountPayable.invoice.Vendor&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.Vendor&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.VendorAdress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.VendorAdress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.InvoiceNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.InvoiceNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.ReceivedDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.ReceivedDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.PONumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.PONumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.DUEDATE&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.DUEDATE&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.CURRENCY&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.CURRENCY&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.TOTAL&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.TOTAL&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.BankDetails&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.BankDetails&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.Carrier&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.Carrier&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.Items.Description&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.Items.Description&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.Items.UnitPrice&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.Items.UnitPrice&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;NewGeneration.AccountPayable.invoice.Items.LineTotal&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.Items.LineTotal&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UIce37a4ef2cb744d69843c9690a3ff361&quot;:&quot;70&quot;,&quot;UIec703a184a4843f5989d46dca2205e45&quot;:&quot;70&quot;,&quot;UIe9928320345d4e63806d55660770e21f&quot;:&quot;70&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UIe9928320345d4e63806d55660770e21f&quot;:[{&quot;FieldId&quot;:&quot;&quot;,&quot;SubOptions&quot;:[{&quot;FieldId&quot;:&quot;name&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;vendor-addr&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;billing-name&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;billing-addr&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;shipping-addr&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;invoice-no&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;po-no&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;vendor-vat-no&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;date&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;tax&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;total&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;payment-terms&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;net-amount&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;due-date&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;discount&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;shipping-charges&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;payment-addr&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;billing-vat-no&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;shipping-date&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;vendor-email&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;bank-name&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;bank-account-no&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;iban&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;swift-code&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;bank-addr&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;bank-routing-no&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;tax-rate&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;shipping-method&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;currency&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;items&quot;,&quot;SubOptions&quot;:[{&quot;FieldId&quot;:&quot;description&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;quantity&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;unit-price&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;line-amount&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;item-po-no&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;line-no&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;part-no&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null}],&quot;Metadata&quot;:null}],&quot;Metadata&quot;:null}],&quot;UIec703a184a4843f5989d46dca2205e45&quot;:[],&quot;UIce37a4ef2cb744d69843c9690a3ff361&quot;:[]}}">
      <p4:DataExtractionScope.Extractors>
        <p5:MachineLearningExtractor Endpoint="{x:Null}" ApiKey="Avgy1Z7fNAnXdNfflmmN80AGFWjNqptj3h/OTlqLWRwcZWpU8mzWT211mRMWpkn5HiTgcLf5/mWCxHZrqBYXhA==" Configuration="{}{&quot;Endpoint&quot;:&quot;https://du.uipath.com/ie/invoices&quot;,&quot;ApiKey&quot;:&quot;Avgy1Z7fNAnXdNfflmmN80AGFWjNqptj3h/OTlqLWRwcZWpU8mzWT211mRMWpkn5HiTgcLf5/mWCxHZrqBYXhA==&quot;,&quot;AvailableMLSkills&quot;:[]}" DisplayName="Machine Learning Extractor" sap:VirtualizedContainerService.HintSize="234,193" sap2010:WorkflowViewState.IdRef="MachineLearningExtractor_6" PersistenceId="UIe9928320345d4e63806d55660770e21f" RetryOnFailure="True" SelectedMLSkill="Invoice_Classifier_Skill" Timeout="100000" UseServerSideOCR="False">
          <p5:MachineLearningExtractor.AvailableMLSkills>
            <scg:List x:TypeArguments="x:String" Capacity="1">
              <x:String>Invoice_Classifier_Skill</x:String>
            </scg:List>
          </p5:MachineLearningExtractor.AvailableMLSkills>
          <p5:MachineLearningExtractor.DocumentBounds>
            <InArgument x:TypeArguments="p6:ResultsDocumentBounds">
              <DelegateArgumentValue x:TypeArguments="p6:ResultsDocumentBounds">
                <DelegateInArgument x:TypeArguments="p6:ResultsDocumentBounds" Name="DocumentBounds" />
              </DelegateArgumentValue>
            </InArgument>
          </p5:MachineLearningExtractor.DocumentBounds>
          <p5:MachineLearningExtractor.DocumentObjectModel>
            <InArgument x:TypeArguments="p3:Document">
              <DelegateArgumentValue x:TypeArguments="p3:Document">
                <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
              </DelegateArgumentValue>
            </InArgument>
          </p5:MachineLearningExtractor.DocumentObjectModel>
          <p5:MachineLearningExtractor.DocumentPath>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
              </DelegateArgumentValue>
            </InArgument>
          </p5:MachineLearningExtractor.DocumentPath>
          <p5:MachineLearningExtractor.DocumentText>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
              </DelegateArgumentValue>
            </InArgument>
          </p5:MachineLearningExtractor.DocumentText>
          <p5:MachineLearningExtractor.ExtractorDocumentType>
            <InArgument x:TypeArguments="p7:ExtractorDocumentType">
              <DelegateArgumentValue x:TypeArguments="p7:ExtractorDocumentType">
                <DelegateInArgument x:TypeArguments="p7:ExtractorDocumentType" Name="ExtractorDocumentType" />
              </DelegateArgumentValue>
            </InArgument>
          </p5:MachineLearningExtractor.ExtractorDocumentType>
          <p5:MachineLearningExtractor.ExtractorResult>
            <OutArgument x:TypeArguments="p7:ExtractorResult">
              <DelegateArgumentReference x:TypeArguments="p7:ExtractorResult">
                <DelegateOutArgument x:TypeArguments="p7:ExtractorResult" Name="ExtractorResult" />
              </DelegateArgumentReference>
            </OutArgument>
          </p5:MachineLearningExtractor.ExtractorResult>
          <p5:MachineLearningExtractor.PredictionId>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
              </DelegateArgumentValue>
            </InArgument>
          </p5:MachineLearningExtractor.PredictionId>
        </p5:MachineLearningExtractor>
        <p4:FormExtractor SerializedSignatureFields="{x:Null}" ApiKey="Avgy1Z7fNAnXdNfflmmN80AGFWjNqptj3h/OTlqLWRwcZWpU8mzWT211mRMWpkn5HiTgcLf5/mWCxHZrqBYXhA==" DisplayName="Form Extractor" Endpoint="https://du.uipath.com/svc/formextractor" sap:VirtualizedContainerService.HintSize="234,193" sap2010:WorkflowViewState.IdRef="FormExtractor_3" MinOverlapPercentage="65" PersistenceId="UIec703a184a4843f5989d46dca2205e45" SendDocumentsForAlgorithmImprovements="True" SerializedSettings="{}{}" SerializedTemplates="[{&quot;DocumentTypeId&quot;:&quot;NewGeneration.AccountPayable.invoice&quot;,&quot;FormId&quot;:&quot;06863af1&quot;,&quot;FormName&quot;:&quot;Invoice&quot;,&quot;OriginalFileExtension&quot;:&quot;pdf&quot;,&quot;Pages&quot;:[{&quot;Page&quot;:0,&quot;Size&quot;:[0.0,0.0,612.0,792.0],&quot;SkewAngle&quot;:-0.1,&quot;Evidence&quot;:[],&quot;Fields&quot;:[],&quot;Tables&quot;:[]}],&quot;AnchorBasedConfiguration&quot;:{&quot;AnchorBasedFieldConfiguration&quot;:[{&quot;FieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.Carrier&quot;,&quot;FieldDescriptors&quot;:[{&quot;PageIndexAtDesignTime&quot;:0,&quot;Offset&quot;:[-6.5762,23.4393,181.6055,27.2933],&quot;Target&quot;:{&quot;Text&quot;:&quot;Carrier:&quot;,&quot;Area&quot;:[170.4,348.53,37.07,8.27]},&quot;Anchors&quot;:[]}]}]}}]" Timeout="100000">
          <p4:FormExtractor.DocumentBounds>
            <InArgument x:TypeArguments="p6:ResultsDocumentBounds">
              <DelegateArgumentValue x:TypeArguments="p6:ResultsDocumentBounds">
                <DelegateInArgument x:TypeArguments="p6:ResultsDocumentBounds" Name="DocumentBounds" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:FormExtractor.DocumentBounds>
          <p4:FormExtractor.DocumentObjectModel>
            <InArgument x:TypeArguments="p3:Document">
              <DelegateArgumentValue x:TypeArguments="p3:Document">
                <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:FormExtractor.DocumentObjectModel>
          <p4:FormExtractor.DocumentPath>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:FormExtractor.DocumentPath>
          <p4:FormExtractor.DocumentText>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:FormExtractor.DocumentText>
          <p4:FormExtractor.ExtractorDocumentType>
            <InArgument x:TypeArguments="p7:ExtractorDocumentType">
              <DelegateArgumentValue x:TypeArguments="p7:ExtractorDocumentType">
                <DelegateInArgument x:TypeArguments="p7:ExtractorDocumentType" Name="ExtractorDocumentType" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:FormExtractor.ExtractorDocumentType>
          <p4:FormExtractor.ExtractorResult>
            <OutArgument x:TypeArguments="p7:ExtractorResult">
              <DelegateArgumentReference x:TypeArguments="p7:ExtractorResult">
                <DelegateOutArgument x:TypeArguments="p7:ExtractorResult" Name="ExtractorResult" />
              </DelegateArgumentReference>
            </OutArgument>
          </p4:FormExtractor.ExtractorResult>
          <p4:FormExtractor.PredictionId>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:FormExtractor.PredictionId>
        </p4:FormExtractor>
        <p4:FormExtractor SerializedSignatureFields="{x:Null}" ApiKey="Avgy1Z7fNAnXdNfflmmN80AGFWjNqptj3h/OTlqLWRwcZWpU8mzWT211mRMWpkn5HiTgcLf5/mWCxHZrqBYXhA==" DisplayName="Form Extractor" Endpoint="https://du.uipath.com/svc/formextractor" sap:VirtualizedContainerService.HintSize="234,193" sap2010:WorkflowViewState.IdRef="FormExtractor_4" MinOverlapPercentage="65" PersistenceId="UIce37a4ef2cb744d69843c9690a3ff361" SendDocumentsForAlgorithmImprovements="True" SerializedSettings="{}{}" SerializedTemplates="[{&quot;DocumentTypeId&quot;:&quot;NewGeneration.AccountPayable.invoice&quot;,&quot;FormId&quot;:&quot;fc0aa04f&quot;,&quot;FormName&quot;:&quot;Invoice2&quot;,&quot;OriginalFileExtension&quot;:&quot;pdf&quot;,&quot;Pages&quot;:[{&quot;Page&quot;:0,&quot;Size&quot;:[0.0,0.0,612.0,792.0],&quot;SkewAngle&quot;:0.0,&quot;Evidence&quot;:[],&quot;Fields&quot;:[],&quot;Tables&quot;:[]}],&quot;AnchorBasedConfiguration&quot;:{&quot;AnchorBasedFieldConfiguration&quot;:[{&quot;FieldId&quot;:&quot;NewGeneration.AccountPayable.invoice.Carrier&quot;,&quot;FieldDescriptors&quot;:[{&quot;PageIndexAtDesignTime&quot;:0,&quot;Offset&quot;:[21.469,-19.2738,41.9897,31.4923],&quot;Target&quot;:{&quot;Text&quot;:&quot;SHIPPED&quot;,&quot;Area&quot;:[303.26,260.7,37.82,11.88]},&quot;Anchors&quot;:[]}]}]}}]" Timeout="100000">
          <p4:FormExtractor.DocumentBounds>
            <InArgument x:TypeArguments="p6:ResultsDocumentBounds">
              <DelegateArgumentValue x:TypeArguments="p6:ResultsDocumentBounds">
                <DelegateInArgument x:TypeArguments="p6:ResultsDocumentBounds" Name="DocumentBounds" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:FormExtractor.DocumentBounds>
          <p4:FormExtractor.DocumentObjectModel>
            <InArgument x:TypeArguments="p3:Document">
              <DelegateArgumentValue x:TypeArguments="p3:Document">
                <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:FormExtractor.DocumentObjectModel>
          <p4:FormExtractor.DocumentPath>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:FormExtractor.DocumentPath>
          <p4:FormExtractor.DocumentText>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:FormExtractor.DocumentText>
          <p4:FormExtractor.ExtractorDocumentType>
            <InArgument x:TypeArguments="p7:ExtractorDocumentType">
              <DelegateArgumentValue x:TypeArguments="p7:ExtractorDocumentType">
                <DelegateInArgument x:TypeArguments="p7:ExtractorDocumentType" Name="ExtractorDocumentType" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:FormExtractor.ExtractorDocumentType>
          <p4:FormExtractor.ExtractorResult>
            <OutArgument x:TypeArguments="p7:ExtractorResult">
              <DelegateArgumentReference x:TypeArguments="p7:ExtractorResult">
                <DelegateOutArgument x:TypeArguments="p7:ExtractorResult" Name="ExtractorResult" />
              </DelegateArgumentReference>
            </OutArgument>
          </p4:FormExtractor.ExtractorResult>
          <p4:FormExtractor.PredictionId>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:FormExtractor.PredictionId>
        </p4:FormExtractor>
      </p4:DataExtractionScope.Extractors>
    </p4:DataExtractionScope>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="984,556" sap2010:WorkflowViewState.IdRef="CommentOut_2">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,477" sap2010:WorkflowViewState.IdRef="Sequence_27">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <p:PresentValidationStation FieldsValidationConfidence="{x:Null}" AutomaticExtractionResults="[er_ExtractionResults]" DisplayName="Present Validation Station" DocumentObjectModel="[doc_DOM]" DocumentPath="[in_str_Document]" DocumentText="[str_DocText]" sap:VirtualizedContainerService.HintSize="388,366" sap2010:WorkflowViewState.IdRef="PresentValidationStation_2" ShowOnlyRelevantPageRange="False" Taxonomy="[doctax_DocumentTaxonomy]" ValidatedExtractionResults="[er_validatedExtractionResults]" />
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <p4:ExportExtractionResults DataSet="[dataset_Result]" DisplayName="Export Extraction Results" ExtractionResult="[er_ExtractionResults]" sap:VirtualizedContainerService.HintSize="984,174" sap2010:WorkflowViewState.IdRef="ExportExtractionResults_2" IncludeConfidence="False" IncludeOCRConfidence="False" />
    <ui:MergeDataTable Destination="[dt_Output]" DisplayName="Merge Data Table" sap:VirtualizedContainerService.HintSize="984,133" sap2010:WorkflowViewState.IdRef="MergeDataTable_2" MissingSchemaAction="Add" Source="[dataset_Result.Tables(0)]" />
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="984,90" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[dataset_Result.Tables.Count.ToString()]" />
    <If Condition="[dataset_Result.Tables.Count &gt;= 2]" DisplayName="Adding Items content" sap:VirtualizedContainerService.HintSize="984,2033" sap2010:WorkflowViewState.IdRef="If_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="950,1851" sap2010:WorkflowViewState.IdRef="Sequence_24">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="908,209" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[str_Items]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">ITEMS:</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[dt_TableFromDataset]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="sd:DataTable">[dataset_Result.Tables(2)]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Int32">[int_TableColumnCounter]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Int32">[int_TableRowCounter]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="908,90" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[dataset_Result.Tables.Count.ToString()]" />
          <ui:InterruptibleWhile CurrentIndex="{x:Null}" Condition="[int_TableColumnCounter &lt; dt_TableFromDataset.Columns.Count]" DisplayName="While" sap:VirtualizedContainerService.HintSize="908,1142" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_6">
            <ui:InterruptibleWhile.Body>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="874,1006" sap2010:WorkflowViewState.IdRef="Sequence_23">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="832,81" sap2010:WorkflowViewState.IdRef="Assign_25">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[int_TableRowCounter]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InterruptibleWhile CurrentIndex="{x:Null}" Condition="[int_TableRowCounter &lt; dt_TableFromDataset.Rows.Count]" DisplayName="While" sap:VirtualizedContainerService.HintSize="832,676" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_7">
                  <ui:InterruptibleWhile.Body>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="798,540" sap2010:WorkflowViewState.IdRef="Sequence_22">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[(int_TableRowCounter = 0).ToString + &quot; | &quot; + (int_TableColumnCounter = dt_TableFromDataset.Columns.Count - 1).ToString]" sap:VirtualizedContainerService.HintSize="756,331" sap2010:WorkflowViewState.IdRef="Switch`1_2">
                        <Assign x:Key="True | False" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_26">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_Items]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[str_Items + " | Column" + int_TableColumnCounter.ToString + ":," + dt_TableFromDataset(0)(int_TableColumnCounter).ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign x:Key="False | False" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_27">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_Items]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[str_Items + "," + dt_TableFromDataset(int_TableRowCounter)(int_TableColumnCounter).ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign x:Key="True | True" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_28">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_Items]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[str_Items + " | Column" + int_TableColumnCounter.ToString + ":, $" + (Cint(dt_TableFromDataset(0)(0).ToString.Split(".")(0)) * Cint(dt_TableFromDataset(0)(2).ToString.Split(".")(0))).ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign x:Key="False | True" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_29">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_Items]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[str_Items + ", $" + (Cint(dt_TableFromDataset(int_TableRowCounter)(0).ToString.Split(".")(0)) * Cint(dt_TableFromDataset(int_TableRowCounter)(2).ToString.Split(".")(0))).ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Switch>
                      <Assign sap:VirtualizedContainerService.HintSize="756,81" sap2010:WorkflowViewState.IdRef="Assign_30">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[int_TableRowCounter]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[int_TableRowCounter + 1]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </ui:InterruptibleWhile.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InterruptibleWhile>
                <Assign sap:VirtualizedContainerService.HintSize="832,81" sap2010:WorkflowViewState.IdRef="Assign_31">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[int_TableColumnCounter]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[int_TableColumnCounter + 1]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ui:InterruptibleWhile.Body>
          </ui:InterruptibleWhile>
          <Assign sap:VirtualizedContainerService.HintSize="908,81" sap2010:WorkflowViewState.IdRef="Assign_32">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[str_Items]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[str_Items.Replace("ITEMS: |","").Replace(":,",":")]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="908,81" sap2010:WorkflowViewState.IdRef="Assign_33">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">[dt_Output.Rows(dt_Output.Rows.Count - 1)(dt_Output.Columns.Count - 1)]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[str_Items]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_25" />
      </If.Else>
    </If>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="984,141" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="[UiPath.Core.Activities.LogLevel.Trace]" Message="[&quot;[&quot;+Now.ToString(&quot;yyyy/MM/dd HH:mm:ss&quot;)+&quot;] : &quot; + in_str_Document.ToString + &quot; successfully processed through Document Reader&quot;]" />
    <Assign sap:VirtualizedContainerService.HintSize="984,82" sap2010:WorkflowViewState.IdRef="Assign_17">
      <Assign.To>
        <OutArgument x:TypeArguments="sd:DataTable">[out_dt_DataFromDocuments]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sd:DataTable">[dt_Output]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="984,141" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;[&quot;+Now.ToString(&quot;yyyy/MM/dd HH:mm:ss&quot;)+&quot;] : &quot;+&quot;Successfully processed all PDF attachments through Document Reader&quot;]" />
  </Sequence>
</Activity>